# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: beardy-os
# description will be included in the image's metadata
description: The preferred u-blue based OS for bearded developers.

# the base image to build on top of (FROM) and the version tag to use
# TODO: investigate bazzite as a base instead?
base-image: ghcr.io/ublue-os/silverblue-main
image-version: latest

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: containerfile
    snippets:
      - LABEL org.opencontainers.image.source=https://github.com/detiber/beardy-os

  # TODO: switch to sysext for 1password: https://universal-blue.discourse.group/t/installing-1password-in-bluefin-a-better-way/5442/2, https://github.com/travier/fedora-sysexts
  - type: bling
    install:
      - rpmfusion
      - ublue-update
      - 1password
      - dconf-update-service

  - type: rpm-ostree
    # repos:
    #   # - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
    install:
      - qemu
      - libvirt
      - virt-manager
      # - podman-compose
      # - chromium
      # - micro
      # - starship
    # remove:
    #   # example: removing firefox (in favor of the flatpak)
    #   # "firefox" is the main package, "firefox-langpacks" is a dependency
    #   # - firefox
    #   # - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: files
    files:
      - source: system/common
        destination: / # copies files/system/common/* (* means everything inside it) into your image's root folder /

  - type: default-flatpaks
    notify: true # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub
      repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
        - com.github.tchx84.Flatseal
        - com.google.Chrome
        - com.mattjakeman.ExtensionManager
        - com.valvesoftware.Steam
        - com.valvesoftware.SteamLink
        - io.github.dvlv.boxbuddyrs
        - io.github.flattool.Warehouse
        - io.github.pwr_solaar.solaar
        - io.missioncenter.MissionCenter
        - io.podman_desktop.PodmanDesktop
        - org.cockpit_project.CockpitClient
        - org.fedoraproject.MediaWriter
      # remove:
      # - org.gnome.eog

  # - type: fonts
  #   fonts:
  #     nerd-fonts:
  #       - FiraCode
  #       - Terminus
  #       - Hack
  #       - Symbols

  # - type: akmods
  #   base: main
  #   install:
  #     - openrgb
  #     - v4l2loopback
  #     - evdi
  #     - kvmfr
  #     - ryzen-smu
  #     - zfs
  #     - zenergy

  # - type: brew
  #   brew-analytics: false
  #   auto-update: true
  #   auto-upgrade: true
  #   nofile-limits: true

  # - type: chemzoi
  #   repository: "https://github.com/detiber/dotfiles"
  #   # branch: main
  #   file-conflict-policy: skip # skip files that have diverged from the repo, can be set to "replace"
  #   # run-every: 1d
  #   # wait-after-boot: 5m
  #   disable-init: true # disabled until configuration can be sorted out and repo updated
  #   disable-update: true # disabled until configuration can be sorted out and repo updated
  #   all-users: false # make users have to enable chezmoi manually
  #   # init/update can be manually enabled for the current user with `systemctl enable --user chezmoi-init.service chezmoi-update.timer`
  #   # init/update can be manually enabled for all users with `sudo systemctl enable --user chezmoi-init.service chezmoi-update.timer`
  #   # enable lingering for a user with: `sudo loginctl enable-linger <username>`
  #   # lingering will for a user's unit files to run at boot and continue running even when not logged in

  # # # Hardware acceleration with Intel (c.f. https://wiki.archlinux.org/title/Hardware_video_acceleration)
  # # - type: rpm-ostree
  # #   # Need to remove this first otherwise it conflicts with intel-media-driver
  # #   remove:
  # #     - libva-intel-media-driver
  # # - type: rpm-ostree
  # #   install:
  # #     - intel-media-driver
  # #     - libva-intel-media-driver
  # #     - igt-gpu-tools # To check GPU usage via sudo intel_gpu_top

  - type: systemd
    system:
      enabled:
        - podman.socket

  # Add wolf
  - from-file: apps/wolf.yml

  - type: signing # this sets up the proper policy & signing files for signed images to work fully
